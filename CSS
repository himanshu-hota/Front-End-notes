CSS:-
    1. CSS units:-
               a.) % = when we want to set dimensions relative to the parent.
               b.) vh vw = when we want to set dimensions relative to the visible area of the screen.
               c.) em = Relative to the font-size of the element (2em means 2 times the size of the current font
               d.) rem = Relative to font-size of the root element
               
               Tip: The em and rem units are practical in creating perfectly scalable layout!
                    * Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm.
               
               Read more:- https://www.w3schools.com/cssref/css_units.asp
                           https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units
                           
    2. Positioning:-
                a.) static:- by default.
                b.) relative:- The element is positioned relative to its normal position. //left right top bottom
                c.) absolute:- absolute is positioned respect to the first relative positioned parent,No space is reserved for the element by default.
                d.) fixed:- positioned fixed to the viewport,when we scroll the element stays at its location. for example social bars on websites.
                e.) sticky:- it is combination of relative and fixed,for example scrolling background images in websites.
                
                Read more:- https://www.w3schools.com/cssref/pr_class_position.asp
              
    3. Flex:-
                a.) flex-direction: Indicates directions of elements (row/column/row-reverse/column-reverse).
                b.) flex-wrap: Wrap elements by adjusting size. (wrap/no-wrap)
                c.) flex-grow: Adjust remaining space by splitting them to specified porpotion (integer values)
                d.) flex-shrink: same as flex-grow but in this case space is reduced. (integer values)
                e.) justify-content:- Align items across to the main axis. (center/flex-start/flex-end/space-between/space-around/space-evenly)
                f.) align-items:- Align items across the cross axis, here cross axis means perpendicular to main axis. (baseline/flex-start/flex-end/center/stretch)

    4. ::before :: after:- It is used to add virtual element after or before the current element.
                
